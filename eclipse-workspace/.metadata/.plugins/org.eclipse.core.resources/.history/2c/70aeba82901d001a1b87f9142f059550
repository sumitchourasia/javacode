package com.bridgelab.utility;

import java.io.*;
import java.util.Random;
import java.util.regex.*;
import java.util.Scanner;

public class Utility {
	static Scanner sc;
	static {
		sc=new Scanner(System.in);
	}
	
	public static int readInt()
	{
		 
		int input=sc.nextInt();
		return input;
	}
	
	public static double readDouble() {
		double input=sc.nextDouble();
		return input;
	}
	
	
	public static String readString()
	{	
		String input=sc.next();
		return input;
	}
	
	
	public static void closeScanner()
	{
		sc.close();
	}
	
	public static double getRandomDouble() {
		Random rd=new Random();
		double random=rd.nextDouble();
		return random;
	}
	
	public static int getRandomInt(int n) {
		Random rd=new Random();
		int random=rd.nextInt(n);
		return random;
	}
	
	public static void enterArrayInt(int[] arr) {
		for(int i=0;i<arr.length;i++)
		{
			arr[i]=readInt();
		}
	}
	
	public static void enterArrayInt(int[][] arr) {
		for(int i=0;i<arr.length;i++)
		{
			for(int j=0;j<arr.length;j++)
			arr[i][j]=readInt();
		}
	}
	
	public static void printArray(int[] arr)
	{
		for(int i=0;i<arr.length;i++)
		{
			System.out.print(arr[i]+" ");
		}
	}
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	public static void enterDistinctArrayInt(int[] arr) {
		boolean duplicate=false;
		int data=0;
		int j=0;
		for(int i=0;i<arr.length;i++)
		{
			duplicate=false;
			data=readInt();
			for(j=0;j<=i;j++)
			{
				if(arr[j]==data)
				{
					duplicate=true;
					break;
				}
			}
			if(duplicate==true)
			{
				System.out.print("duplicate number enter distinct number : ");
				i--;
				continue;
			}
			else {
				arr[i]=data;
			}
				
		}
	}
	
	public static int findtripletsumzero(int[] arr)
	{
		int count=0;
		for(int i=0;i< arr.length-2;i++)
		{
			for(int j=0;j<arr.length-1;j++)
			{
				for(int k=0;k<arr.length;k++)
				{
					if(arr[i]+arr[j]+arr[k]==0 && arr[i]!=arr[j] && arr[j]!=arr[k]&& arr[k]!=arr[i])
					{
						count++;
						System.out.println(arr[i]+" "+arr[j]+" "+arr[k]);
					}
				}
			}
		}
		return count;
	}
	
	public static double euclideanDistance(int x,int y)
	{
		double distance= Math.sqrt(Math.pow(x,2)+Math.pow(y,2));
		
		return distance;
	}
	
	public static void quadraticRoots(int a,int b,int c) {
		double temp = (Math.pow(b,2) - 4*a*c);
		if(temp<0)
		{
			System.out.println("complex roots");
			return;
		}
		double delta= Math.sqrt(temp);
		double root1=(-b+delta)/2;
		double root2=(-b-delta)/2;
		System.out.println(" root1 = "+root1 +" root2 = "+root2);
	}
	
	
	public static double calWindChills(double t,double v)
	{
		
		double windchills=(35.74 + (0.6215*t) + (((0.4275*t) - 35.75)*Math.pow(v,0.16)));
		
		return windchills;
	}
	
	
	
	public static int resultCouponNumber(int[] arr)
	{
		int count=0;
		int hit=0;
		int random=0;
		while(hit < arr.length)
		{
			random=getRandomInt(100);
			count++;
			for(int i=0;i<arr.length;i++)
			{
				if(arr[i]==random)
				{
					hit++;
				}
			}
		}
		return count;
	}

	
//tic tAC toe game start

public static void computerTurn(int[][] array) {
	int i=0;
	int j=0;
	while(true) {
		
		i=Utility.getRandomInt(3);
		System.out.println("i= "+i);
		i=i%3;
		j=Utility.getRandomInt(3);
		System.out.println("j= "+j);
		j=j%3;
		
		if(array[i][j]==0) 
		{
			array[i][j]=-1;
			return;
		}
		else
		{
			continue;
		}
	}
}


public static void userTurn(int[][] array)
{
	int i=0;
    int j=0;
	while(true) {
		System.out.println("enter the index i and j to place your mark : ");
		i=Utility.readInt();
		i=i%3;
		j=Utility.readInt();
		j=j%3;
	
		if(array[i][j]==0) 
		{
			array[i][j]=1;
			return;
		}
		else
		{
			System.out.println("already taken try again !!!");
			continue;
		}
	}	
}

public static int result(int[][]array) {
	int times=1;
	int sum=0;
	while(times<=2)
	{
		for(int i=0;i<3;i++)
		{
			sum=0;
			for(int j=0;j<3;j++)
			{
				if(times==1)
				{
					sum=sum+array[i][j];
				}
				else if(times==2)
				{
					sum=sum+array[j][i];
				}
			}
			if(sum==3||sum==-3)
			{
				return sum;
			}
		    }
		times++;
	 }
	
		 sum=0;
		 sum=array[0][0]+array[1][1]+array[2][2];
		 if(sum==3||sum==-3)
		 {
			 return sum;
		 }
		 else 
		 {
			sum=array[0][2]+array[1][1]+array[2][0];
			if(sum==3||sum==-3)
  		 {
  			 return sum;
  		 }
		 }
		 
return 0;
}


public static void checkStatus(int[][]array)
{
	int sum=result(array);
	if(sum==3||sum==-3)
	{
		if(sum==3)
			System.out.println("user won!!!");
		else
			System.out.println("computer won!!!");
		System.exit(0);
	}		
}

public static void print2DArray(int[][] array)
{
	for(int i=0;i<3;i++)
	{
		for(int j=0;j<3;j++)
		{
			System.out.print(array[i][j]+"  ");
		}
		System.out.println(" ");
	}
}
//tic tac toe game end

//gambler starts
public static void playGambler(int n) {
	int totalbets=0;
	int win=0;
	int stock=0;
	int goal=0;
	for(int i=0;i<n;i++)
	{
		System.out.print("enter the stock : ");
		stock=readInt();
		System.out.print("enter the Goal : ");
		goal=readInt();
		
		while(stock!=0 && win!=goal )
		{
	             System.out.print("enter your choice : ");
				 int choice=readInt();
				 
				 int random=getRandomInt(5);
				 System.out.println("random number : "+random);
				 
				 totalbets++;
				 
				 if(random==choice)
				 {
					 win++;
					 stock++;
				 }
				 else
				 {
					 stock--;
				 }
		 }
	}
	System.out.println("total number of bets : "+totalbets);
	System.out.println("total number of win : "+win);
}
//gambler ends

//bubble sort
public static void doBubbleSort(int [] arr) {
	
	for(int i=0;i<arr.length;i++)
	{
		for(int j=0;j<arr.length-1-i;j++)
		{
			if(arr[j]>arr[j+1])
			{
				int temp=arr[j];
				arr[j]=arr[j+1];
				arr[j+1]=temp;
			}
		}
	}
}
//bubble sort end

//insertion sort starts

public static void insertionSort(int[] arr)
{
		for(int i=0;i<arr.length;i++)
		{
				int key=arr[i];
				int j=i-1;
				while(j>=0)
				{
					if(arr[j]>key)
					{
						arr[j+1]=arr[j];
					}
					else
					{
						break;
					}
					j--;
				 }
				 arr[j+1]=key;
		 }
}
//insertion sort ends

//write a sentence into file
public static void writeLineIntoFilePW(String filename) throws IOException 
{
	File file=new File(filename);
	PrintWriter pw=new PrintWriter(file);
	String s="";
	System.out.println("enter the word to write in file : ");
	s=Utility.readString();
	pw.println(s);
	
	pw.flush();
	pw.close();
	Utility.closeScanner();
}



//read a single line from given file using PrintWriter
public static String readlineFromFile(String filename) throws IOException
{
	File file=new File(filename);
	if(!file.exists())
	{
		System.out.println("file doesnot exist");
		return null;
	}
	FileReader fr=new FileReader(file);
	BufferedReader br=new BufferedReader(fr);
	String line="";
	line=br.readLine();
	System.out.println("line  : "+line);
	
	br.close();
	return line;
}

//sort a given string array using bubble sort
public static void sortStringArray(String[] arr)
{
	for(int i=0;i<arr.length;i++)
	{
		for(int j=0;j<arr.length-1-i;j++)
		{
			if( arr[j].compareToIgnoreCase(arr[j+1])>0) 
			{
				String temp=arr[j];
				arr[j]=arr[j+1];
				arr[j+1]=temp;
			}
		}
	}
}

public static boolean isPrimeNumber(int n)
{
	boolean isPrime=true;
	for(int i=2;i<=(int)Math.sqrt(n);i++)
	{
		if(n%i==0)
		{
			isPrime=false;
			break;
		}
	}
	return isPrime;
}


public static int vendingMachine(int amount) {
	
	int notes=0;
	int totalnotes=0;
	int div=1000;
	
	while(amount>0)
	{
		notes=amount/div;
		amount=amount%div;
		totalnotes +=notes;
		
		if(notes>0)
		System.out.println(div+ " rupees notes are : "+notes );
		
		if(div==500 || div==50)
		{
			div=div/5;
		}
		else
			div=div/2;
	}
return totalnotes;
}


public static void calculateDayOfWeek(int d,int m,int y)
{
	int d0=0;
	int m0=0;
	int y0=0;
	int x=0;
	
	y0=y-(14-m)/12;
	
	x=y0 + (y0/4) - (y0/100) + (y0/400);
	
	m0 = m + 12 * ((14 - m) / 12) - 2;
	
	d0 = (d + x + (31 * m0) / 12) % 7;
	
	switch(d0)
	{
	case 0:
	{
		System.out.println("sunday");
		break;
	}
	case 1:
	{
		System.out.println("Monday");
		break;
	}
	case 2:
	{
		System.out.println("tuesday");
		break;
	}
	case 3:
	{
		System.out.println("wednesday");
		break;
	}
	case 4:
	{
		System.out.println("Thursday");
		break;
	}
	case 5:
	{
		System.out.println("friday");
		break;
	}
	case 6:
	{
		System.out.println("saturday");
		break;
	}
    default : 
    System.out.println("error");
	}
}


public static double temperaturConversion(int choice,int temp)
{
	double newtemp=0;
	if(choice==1)
	{	
		int c=temp;
		System.out.println(" celcius to fahrenheit ");
		newtemp= (c * (double)9/5) + 32 ;
	}
	else
	{
		int f=temp;
		System.out.println(" fahrenheit to celcius ");
		newtemp= f - 32 * (double)5/9 ;
	}
return newtemp;
}

public static void newtonSqrt(int c) {
	double t=c;
	double epsilon= 1e-15;
	
	while(Math.abs(t-c/t) > epsilon*t) {
		
	t=(((double)c/t) + t)/2 ;
	
	}
	System.out.println(t);
}



}







